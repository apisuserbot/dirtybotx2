{
  "name": "Robot",
  "description": "Telegram's sassiest group manager. Modular Telegram group management bot!",
  "keywords": [
    "telegram",
    "best",
    "group",
    "manager",
    "3"
  ],
  "repository": "https://github.com/apisuserbot/dirtybotx2",
  "success_url": "https://t.me/PacarFerdilla",
  "stack": "container",
  "env": {
    "ENV": {
      "description": "Setting this to ANYTHING will enable env variables. But, you need to understand the code to know what to set here!",
      "value": "ANYTHING"
    },
    "TOKEN": {
      "description": "Your bot token, as a string.",
      "value": ""
    },
    "OWNER_ID": {
      "description": "An integer of consisting of your owner ID",
      "value": "310374678"
    },
    "OWNER_USERNAME": {
      "description": "Your username",
      "value": "Aflky02"
    },
    "URL": {
      "description": "The Heroku App URL similar to https://<appname>.herokuapp.com/",
      "value": ""
    },
    "MESSAGE_DUMP": {
      "description": "optional: a chat where your replied saved messages are stored, to stop people deleting their old",
      "value": "-1001396716259"
    },
    "STRICT_GBAN": {
      "description": "Enforce gbans across new groups as well as old groups. When a gbanned user talks, he will be banned.",
      "value": "True"
    },
    "DEL_CMDS": {
      "description": "Whether to delete commands from users which don't have rights to use that command",
      "value": "True"
    },
    "SUDO_USERS": {
      "description": "A space separated list of user_ids which should be considered sudo users",
      "value": "310374678"
    },
    "SUPPORT_USERS": {
      "description": "A space separated list of user_ids which should be considered support users (can gban/ungban, nothing else)",
      "value": "310374678"
    },
    "WHITELIST_USERS": {
      "description": "A space separated list of user_ids which should be considered whitelisted - they can't be banned.",
      "value": "310374678"
    },
    "PORT": {
      "description": "Port to use for your webhooks",
      "value": "5000"
    },
    "API_OPENWEATHER": {
      "description": "Your open weather API key for weather module to run",
      "value": ""
    },
    "ALLOW_EXCL": {
      "description": "Whether to allow using exclamation marks ! for commands as well as /.",
      "value": "True"
    },
    "WALL_API": {
      "description": "Get API KEY from https://wall.alphacoders.com/",
      "value": ""
    },
    "DOG_API_KEY": {
      "description": "Get API KEY from http://thedogapi.com",
      "value": ""
    },
    "CAT_API_KEY": {
      "description": "Get API KEY from http://thecatapi.com",
      "value": ""
    },
    "API_OPENWEATHER": {
      "description": "Get API KEY from openweathermap",
      "value": ""
    },
    "TIME_API_KEY": {
      "description": "Get API KEY from timezonedb",
      "value": ""
    }
  },
  "addons": [
    {
      "plan": "heroku-postgresql",
      "options": {
        "version": "12"
      }
    }
  ]
}
